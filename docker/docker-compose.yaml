
services:
  web:
    build:
      context: ..
      dockerfile: Docker/Dockerfile
    container_name: api_monitor_client_web
    command: >
      sh -c "if [ \"$DJANGO_ENV\" = 'local' ]; then
        python manage.py runserver 0.0.0.0:8000;
      else
        gunicorn api_monitor_client.wsgi:application --bind 0.0.0.0:8000;
      fi"
    volumes:
      - ..:/app
      - static_volume:/app/static
    expose:
      - "8000"
    depends_on:
      - db
      - mongo
    environment:
      - DJANGO_ENV=local



  db:
    image: postgres:14
    container_name: api_monitor_client_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: api_monitor_client_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:6
    container_name: api_monitor_client_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  nginx:
    image: nginx:latest
    container_name: api_monitor_client_nginx
    ports:
      - "80:80"  # Nginx listens on port 80
    depends_on:
      - web
    volumes:
      - ../config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/static
      - media_volume:/app/media

volumes:
  postgres_data:
  static_volume:
  mongo_data:
  media_volume:
